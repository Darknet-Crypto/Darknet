sudo: required
dist: trusty
os: linux
language: minimal
cache:
  directories:
  - depends/built
  - depends/sdk-sources
  - "$HOME/.ccache"
env:
  global:
  - MAKEJOBS=-j3
  - RUN_TESTS=false
  - CHECK_DOC=0
  - CHECK_LOGPRINT=0
  - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
  - CCACHE_SIZE=100M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
  - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
  - SDK_URL=https://bitcoincore.org/depends-sources/sdks
  - WINEDEBUG=fixme-all
  matrix:
  - HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" CHECK_DOC=1 CHECK_LOGPRINT=1
    GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
  - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PACKAGES="python3
    nsis g++-mingw-w64-i686 wine1.6 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports"
  - HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1"
    RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat
    --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash" PYZMQ=true
  - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PACKAGES="python3
    nsis g++-mingw-w64-x86-64 wine1.6 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports"
  - HOST=x86_64-unknown-linux-gnu PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1
    DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat
    --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER" PYZMQ=true
  - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin
    libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports"
    OSX_SDK=10.11 GOAL="deploy"
before_install:
- export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" |
  sed "s|::|:|g")
install:
- if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
- if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ;
  fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends
  --no-upgrade -qq $PACKAGES; fi
before_script:
- if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
- if [ "$CHECK_LOGPRINT" = 1 ]; then contrib/devtools/logprint-scanner.py; fi
- unset CC; unset CXX
- mkdir -p depends/SDKs depends/sdk-sources
- if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz;
  fi
- if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
- make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
- export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
- if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
- OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
- BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST
  --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
- depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
- test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
- "./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || (
  cat config.log && false)"
- make distdir PACKAGE=bitcoin VERSION=$HOST
- cd bitcoin-$HOST
- "./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG ||
  ( cat config.log && false)"
- make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL
  V=1 ; false )
- export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
- if [ "$RUN_TESTS" = "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1;
  fi
after_script:
- echo $TRAVIS_COMMIT_RANGE
- echo $TRAVIS_COMMIT_LOG
notifications:
  slack:
    secure: w22XjHoG/3xplxWzddS9Ma7i99Q/hq4FA3Q56xS+RtO2vlFgDT+eDzCppstdx96mn2/4e+/V1aiQ4E6GVEvJMeldqSUhPv9OBnKR0KJVAOwu4haNXt+0ZeQFt8lIndKB5cMVyOJkoq6peGoHNXslClM0lGuBn7g7VC2QPQYNWrJNrrGL7IiVb6fNOIKHWcC4URkzSvXAhO/WIqSSlmKxAAx0B2oEsM8LhdAbcjbp7Sm7zH87TIVGBZ7iTVuMc6B9+SfClbE8bBuRtvjTX57Q4UUZzn0zDtKdPdCte0oXdaQF4RdVim9mDodBGIpDo+avW4WL7EE+AK33fs94pwH5bu0LEandR/aeEvVpbSpQ2XsEKSe+6woizgl5i4GXFVZduJF62y/o1f+S/zC3qW9lIEEpiZc4PpX7pDy30X3p6S5nMrW7T/zNh+SjLhS1VP6XKdQtpD3WRCY4GKZYammZhk5RbOy3jTXAahIXuttWdhl/Q3Rb5VqfFJWlrG/qQXt73qOk2/DgJnABxXE6gnWO4MpHAq+kdomNR+nod4HeXI3DOk1wRuQRVoW1rSjiqQd6Db+TP56RKYgt4M4csOD0DG9G+W0AOtZkuKHTeoEtmQfkKFPZLYAQumv41cDN2UE9gKIECmvJSevj4sMCDTWtozKWqay/W4n2+cmhbzmGflY=
deploy:
  provider: releases
  api_key:
    secure: uf6h2p/epUI3Lmad+KKLXQddfGYkqSbtnmanzA9i3l9ELwQfM6ZcAr9iMnWRnEy2ss1No58BQKpgza6Rmc7WJ3iZ72hTrKOWB3mIWIcGhXYzlEV7Z2OPVs3HJ/r8dWOXEyaJ89C56Co0Fg8QJyZsXcX3FIaX//k2Z49cad4mH6uHFy5OQZfbviUyxNKsl48c0rcnIdfRv6trGAnQwq0mfON334ZP81jmF9Jpt4yWRJj5wUn1cT7t3DKGmdX/4EjHstIzW0dKl15ZOoSeW2U36dEekFnwZMkyQg0jr8h257VYX7WNiDYVG+q4r5rhpwQO2N/50fn6zD1l6M5vusU/bRJm0c0QCYIxNOUFv7CijfnyLjXTTSUr3ZgSnTsj5LnlYeslmzJdBzm/hS2lzBDKP/BvtcYfuJOMZPe85jFkuRwVCjsI4RZmPfEUgyfFWRqlXq2XP0tR6LOTqzwYECxAHx6xW3UP37Pt44hn2v1m4FXZJsWhxDktd7oZZCll2tswkayg55B8p0d994IjTVICIp2+oh8BCH3IIybLdG2zW/w1M271Mui/B620ldwIYR8ZvlwwHVSIF93+7AbFmeK1JpvSbLM9KmKdFrEYHGjkSqKgiidFfu6LmUFH03uAOlEEEIJ+4svVv/buj64uyv5KvwgwzUEcX9mM7IvCKQoFlNE=
  file: out/**/zip/*
  on:
    repo: binarysculptor/parly
